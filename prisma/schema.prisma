generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Org {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password_hash String
  whatsapp      String
  created_at    DateTime @default(now())

  address_id String?
  address    Address? @relation(fields: [address_id], references: [id])

  pets Pet[]

  @@map("orgs")
}

model Address {
  id         String   @id @default(uuid())
  street     String
  number     String
  city       String
  state      String
  zipcode    String
  complement String?
  created_at DateTime @default(now())

  org_id String
  org    Org[]

  @@map("addresses")
}

enum PetAge {
  BABY
  YOUNG
  ADULT
  SENIOR
}

enum PetSize {
  SMALL
  MEDIUM
  LARGE
  EXTRA_LARGE
}

enum PetEnergy {
  LOW
  MEDIUM
  HIGH
}

enum PetIndependence {
  LOW
  MEDIUM
  HIGH
}

enum PetEnvironment {
  INDOOR
  OUTDOOR
  BOTH
}

model PetRequirement {
  id          String @id @default(uuid())
  requirement String

  pet_id String?
  Pet    Pet?    @relation(fields: [pet_id], references: [id])

  @@map("pet_requirements")
}

model Pet {
  id           String          @id @default(uuid())
  name         String
  about        String
  age          PetAge          @default(BABY)
  size         PetSize         @default(SMALL)
  energy       PetEnergy       @default(LOW)
  independence PetIndependence @default(LOW)
  environment  PetEnvironment  @default(OUTDOOR)
  adopted      Boolean         @default(false)
  created_at   DateTime        @default(now())

  org_id String?
  org    Org?    @relation(fields: [org_id], references: [id])

  requirements PetRequirement[]

  @@map("pets")
}
